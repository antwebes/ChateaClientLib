<?php
namespace Ant\ChateaClient\Client;

use Ant\ChateaClient\Http\IHttpClient;
interface IApi
{

	//--------------------------------------------------------------------------

	//--------------------------------------------------------------------------
	const URI_ME_PHOTO_ADD						= 'api/me/photo';
	const URI_ME_PHOTO_SHOW						= 'api/me/photo/';
	const URI_ME_PHOTO_DEL						= 'api/me/photo/';
	//--------------------------------------------------------------------------
	const URI_ME_THREAD_ADD						= 'api/me/threads';
	const URI_ME_THREAD_INBOX_SHOW				= 'api/me/threads/inbox';									
	const URI_ME_THREAD_SENT_SHOW				= 'api/me/threads/sent';
	const URI_ME_THREAD_SHOW					= 'api/me/threads/';
	const URI_ME_THREAD_MESSAGE_ADD				= 'api/me/threads/';
	const URI_ME_THREAD_DEL						= 'api/me/threads/';	
	//--------------------------------------------------------------------------
	const URI_ME_VOTE_SHOW						= 'api/me/vote';
	const URI_ME_VOTE_DEL						= 'api/me/vote/';
	const URI_ME_VOTE_ADD						= 'api/me/vote';
	//--------------------------------------------------------------------------	




	// 	POST /api/photo
	/**
	 * create a photo
	 * 
	 * @param string $title
	 * @param byte[] $image
	 */
	public function addPhoto($title,$image);
	//GET /api/me/photo/{id}
	/**
	 * show a photo
	 * @param number $id
	 */
	public function showPhoto($id);
	// 	DELETE /api/photo/{id} 
	/**
	 * Delete a photo
	 * 
	 * @param number $id
	 */
	public function delPhoto($id);
	//GET	/api/photo/{id}/vote
	/**
	 * Show a vote of a photo
	 * 
	 * @param number $photo_id
	 */
	public function showPhotoVotes($photo_id);
	//GET /api/me/photos && 	//GET /api/user/{id}/photos	
	/**
	 * List all photos by user if $user_id is null show me photos
	 * 
	 * @param number $user_id if use
	 */
	public function showAllFotos($user_id = null);
	//POST /api/me/threads
	/**
	 * Creates a thread
	 *
	 * @param string $recipient
	 * @param string $subject
	 * @param string $body
	 */
	 public function addThread($recipient, $subject, $body);
	//GET /api/me/threads/inbox
	/**
	 * Lists threads with messages sended to the logged in user
	 */	
	public function showThreadsInbox();	 
	//GET /api/me/threads/sent 
	/**
	 * Lists threads with messages sended by the logged in user 
	 */
	public function showThreadsSent(); 
	//GET /api/me/threads/{id}
	/**
	 * Lists the messages of a given thread
	 * 
	 * @param number $thread_id
	 */
	public function showThread($thread_id);

	//POST /api/me/threads/{id}
	/**
	 * Replies a message to a given thread
	 * 
	 * @param number $id
	 * @param string $body
	 */
	public function addThreadMessage($thread_id,$body);
	//DELETE /api/me/threads/{id}
    /**
     * Deletes a thread
     *  
     * @param number $id
     */
	public function delThread($thread_id);
	 
	//GET /api/me/vote
	/**
	 * show a vote of an user
	 */
	public function showMeVotes(); 

	//POST /api/me/vote create a vote 
	/**
	 * 
	 * @param number $photo_id
	 * @param float $score not nevative 1.5 vote 
	 */
	public function addVote($photo_id,$score);
	// DELETE /api/me/vote/{id} 
	/**
	 * Delete a vote
	 * 
	 * @param number $id photo id
	 */
	public function delVote($id);
	// 	DELETE /api/user/
	/**
	 * Delete my user
	 */
	public function delMeUser();
	// 	GET /api/users/
	/**
	 * Get all the users
	 */
	public function who();	
	// 	GET /api/me
	/**
	 * Get the user of session
	 */
	public function whoami()
	//DELETE /api/me/
	/**
	 * Delete my user
	 */
	public function delMe();	
	// 	GET /api/users/{id}/friends
	/**
	 * accepts a friendship request
	 * 
	 * @param number $id
	 */	
	public function showFriends($id);


}